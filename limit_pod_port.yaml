apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8sblockports
spec:
  crd:
    spec:
      names:
        kind: K8sBlockPorts
      validation:
        # Schema for the `parameters` field
        openAPIV3Schema:
          properties:
            ports:
              type: array
              items: 
                type: integer
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8sblockedports
        violation [{"msg": msg}] {
          input.review.object.spec.podSelector.matchLabels.app == "webserver"
          some i
          allowed := input.parameters.ports
          provided := input.review.object.spec.ingress[i].ports[i].port 
          provided != allowed[i]
          msg := "Applying Ingress rule for the provided port is not allowed"
        }
...
---
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sBlockPorts
metadata:
  name: deny-ingress-ports
spec:
  match:
    kinds:
      - apiGroups: ["networking.k8s.io"]
        kinds: ["NetworkPolicy"]
  parameters:
    ports: [443]